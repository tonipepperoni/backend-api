datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  output        = "../src/app/prisma/generated"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

model User {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  username      String?  @unique
  password      String?
  email         String   @unique
  roles         String[]
  googleId      String?  @unique
  googleProfile Json?

  emailVerifiedAt   DateTime?
  resetPasswordCode String?

  notifications Notification[]
}

model Notification {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String

  // Polymorphic relation fields
  typeId Int
  type   String

  // Notification details fields
  content String

  // Relation to associated models
  message       Message?       @relation(fields: [typeId], references: [id], map: "message_ref_id") // notification type message?
  friendRequest FriendRequest? @relation(fields: [typeId], references: [id], map: "friend_ref_id") // notification type FriendRequest?

  // users notifications
  user User? @relation(fields: [userId], references: [id], map: "user_ref_id")

  @@index([type, typeId], name: "idx_notification_type")
}

// types of notifications message, friend requests, system, alert and etc.
model Message {
  id            Int            @id @unique @default(autoincrement())
  createdAt     DateTime       @default(now())
  content       String
  notifications Notification[]
}

model FriendRequest {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now())
  status        String
  notifications Notification[]
}
