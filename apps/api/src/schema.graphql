# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AccountInfo {
  avatar: FileUpload
  createdAt: DateTime!
  email: String!
  id: String!
  username: String
}

input AuthExchangeTokenInput {
  rememberMe: Boolean!
}

input AuthLoginInput {
  password: String!
  rememberMe: Boolean!
  username: String!
}

input AuthPasswordChangeInput {
  newPassword: String!
  oldPassword: String!
}

input AuthPasswordResetConfirmationInput {
  newPassword: String!
  token: String!
}

input AuthPasswordResetRequestInput {
  emailOrUsername: String!
}

input AuthRegisterInput {
  email: String!
  password: String!
  username: String!
}

type AuthSession {
  email: String!
  expiresIn: Float!
  rememberMe: Boolean!
  roles: [String!]!
  rules: [String!]!
  token: String!
  userId: String!
  username: String!
}

type BookCountAggregate {
  _all: Int!
  content: Int!
  id: Int!
  title: Int!
}

type BookMaxAggregate {
  id: String
  title: String
}

type BookMinAggregate {
  id: String
  title: String
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

type FileUpload {
  author: User
  authorId: String!
  createdAt: DateTime!
  filePathUrl: String!
  id: ID!
  thumbnailPathUrl: String
  type: String!
  updatedAt: DateTime!
}

type FileUploadCountAggregate {
  _all: Int!
  authorId: Int!
  createdAt: Int!
  filePathUrl: Int!
  id: Int!
  thumbnailPathUrl: Int!
  type: Int!
  updatedAt: Int!
}

input FileUploadCreateNestedOneWithoutAuthorInput {
  connect: FileUploadWhereUniqueInput
  connectOrCreate: FileUploadCreateOrConnectWithoutAuthorInput
  create: FileUploadCreateWithoutAuthorInput
}

input FileUploadCreateOrConnectWithoutAuthorInput {
  create: FileUploadCreateWithoutAuthorInput!
  where: FileUploadWhereUniqueInput!
}

input FileUploadCreateWithoutAuthorInput {
  createdAt: DateTime
  filePathUrl: String!
  id: String
  thumbnailPathUrl: String
  type: String!
  updatedAt: DateTime
}

type FileUploadMaxAggregate {
  authorId: String
  createdAt: DateTime
  filePathUrl: String
  id: String
  thumbnailPathUrl: String
  type: String
  updatedAt: DateTime
}

type FileUploadMinAggregate {
  authorId: String
  createdAt: DateTime
  filePathUrl: String
  id: String
  thumbnailPathUrl: String
  type: String
  updatedAt: DateTime
}

input FileUploadNullableRelationFilter {
  is: FileUploadWhereInput
  isNot: FileUploadWhereInput
}

enum FileUploadOrderByRelevanceFieldEnum {
  authorId
  filePathUrl
  id
  thumbnailPathUrl
  type
}

input FileUploadOrderByRelevanceInput {
  fields: [FileUploadOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input FileUploadOrderByWithRelationAndSearchRelevanceInput {
  _relevance: FileUploadOrderByRelevanceInput
  author: UserOrderByWithRelationAndSearchRelevanceInput
  authorId: SortOrder
  createdAt: SortOrder
  filePathUrl: SortOrder
  id: SortOrder
  thumbnailPathUrl: SortOrderInput
  type: SortOrder
  updatedAt: SortOrder
}

input FileUploadUpdateOneWithoutAuthorNestedInput {
  connect: FileUploadWhereUniqueInput
  connectOrCreate: FileUploadCreateOrConnectWithoutAuthorInput
  create: FileUploadCreateWithoutAuthorInput
  delete: FileUploadWhereInput
  disconnect: FileUploadWhereInput
  update: FileUploadUpdateToOneWithWhereWithoutAuthorInput
  upsert: FileUploadUpsertWithoutAuthorInput
}

input FileUploadUpdateToOneWithWhereWithoutAuthorInput {
  data: FileUploadUpdateWithoutAuthorInput!
  where: FileUploadWhereInput
}

input FileUploadUpdateWithoutAuthorInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  filePathUrl: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  thumbnailPathUrl: NullableStringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FileUploadUpsertWithoutAuthorInput {
  create: FileUploadCreateWithoutAuthorInput!
  update: FileUploadUpdateWithoutAuthorInput!
  where: FileUploadWhereInput
}

input FileUploadWhereInput {
  AND: [FileUploadWhereInput!]
  NOT: [FileUploadWhereInput!]
  OR: [FileUploadWhereInput!]
  author: UserWhereInput
  authorId: StringFilter
  createdAt: DateTimeFilter
  filePathUrl: StringFilter
  id: StringFilter
  thumbnailPathUrl: StringNullableFilter
  type: StringFilter
  updatedAt: DateTimeFilter
}

input FileUploadWhereUniqueInput {
  AND: [FileUploadWhereInput!]
  NOT: [FileUploadWhereInput!]
  OR: [FileUploadWhereInput!]
  author: UserNullableRelationFilter
  authorId: String
  createdAt: DateTimeFilter
  filePathUrl: StringFilter
  id: String
  thumbnailPathUrl: StringNullableFilter
  type: StringFilter
  updatedAt: DateTimeFilter
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

input JsonNullableFilter {
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

type Mutation {
  authPasswordChange(data: AuthPasswordChangeInput!): String!
  authPasswordResetConfirmation(data: AuthPasswordResetConfirmationInput!): AuthSession!
  authRegister(data: AuthRegisterInput!): AuthSession!
  createOnePost(data: PostCreateInput!): Post!
  createOneUser(data: UserCreateInput!): User!
  deleteManyPost(where: PostWhereInput): String!
  deleteManyUser(where: UserWhereInput): String!
  deleteOnePost(where: PostWhereUniqueInput!): String!
  deleteOneUser(where: UserWhereUniqueInput!): String!
  updateManyPost(data: PostUpdateManyMutationInput!, where: PostWhereInput): [Post!]!
  updateManyUser(data: UserUpdateManyMutationInput!, where: UserWhereInput): [User!]!
  updateOnePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post!
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User!
  upsertOnePost(create: PostCreateInput!, update: PostUpdateInput!, where: PostWhereUniqueInput!): [Post!]!
  upsertOneUser(create: UserCreateInput!, update: UserUpdateInput!, where: UserWhereUniqueInput!): User!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

enum NullsOrder {
  first
  last
}

type Post {
  author: User!
  authorId: String!
  content: JSON
  createdAt: DateTime!
  id: ID!
  published: Boolean!
  title: String!
  updatedAt: DateTime!
}

type PostCountAggregate {
  _all: Int!
  authorId: Int!
  content: Int!
  createdAt: Int!
  id: Int!
  published: Int!
  title: Int!
  updatedAt: Int!
}

input PostCreateInput {
  author: UserCreateNestedOneWithoutPostInput!
  content: JSON
  createdAt: DateTime
  id: String
  published: Boolean
  title: String!
  updatedAt: DateTime
}

input PostCreateManyAuthorInput {
  content: JSON
  createdAt: DateTime
  id: String
  published: Boolean
  title: String!
  updatedAt: DateTime
}

input PostCreateManyAuthorInputEnvelope {
  data: [PostCreateManyAuthorInput!]!
  skipDuplicates: Boolean
}

input PostCreateNestedManyWithoutAuthorInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutAuthorInput!]
  create: [PostCreateWithoutAuthorInput!]
  createMany: PostCreateManyAuthorInputEnvelope
}

input PostCreateOrConnectWithoutAuthorInput {
  create: PostCreateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostCreateWithoutAuthorInput {
  content: JSON
  createdAt: DateTime
  id: String
  published: Boolean
  title: String!
  updatedAt: DateTime
}

input PostListRelationFilter {
  every: PostWhereInput
  none: PostWhereInput
  some: PostWhereInput
}

type PostMaxAggregate {
  authorId: String
  createdAt: DateTime
  id: String
  published: Boolean
  title: String
  updatedAt: DateTime
}

type PostMinAggregate {
  authorId: String
  createdAt: DateTime
  id: String
  published: Boolean
  title: String
  updatedAt: DateTime
}

input PostOrderByRelationAggregateInput {
  _count: SortOrder
}

enum PostOrderByRelevanceFieldEnum {
  authorId
  id
  title
}

input PostOrderByRelevanceInput {
  fields: [PostOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input PostOrderByWithRelationAndSearchRelevanceInput {
  _relevance: PostOrderByRelevanceInput
  author: UserOrderByWithRelationAndSearchRelevanceInput
  authorId: SortOrder
  content: SortOrderInput
  createdAt: SortOrder
  id: SortOrder
  published: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

enum PostScalarFieldEnum {
  authorId
  content
  createdAt
  id
  published
  title
  updatedAt
}

input PostScalarWhereInput {
  AND: [PostScalarWhereInput!]
  NOT: [PostScalarWhereInput!]
  OR: [PostScalarWhereInput!]
  authorId: StringFilter
  content: JsonNullableFilter
  createdAt: DateTimeFilter
  id: StringFilter
  published: BoolFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input PostUpdateInput {
  author: UserUpdateOneRequiredWithoutPostNestedInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostUpdateManyMutationInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostUpdateManyWithWhereWithoutAuthorInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithoutAuthorNestedInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutAuthorInput!]
  create: [PostCreateWithoutAuthorInput!]
  createMany: PostCreateManyAuthorInputEnvelope
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [PostUpdateManyWithWhereWithoutAuthorInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]
}

input PostUpdateWithWhereUniqueWithoutAuthorInput {
  data: PostUpdateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithoutAuthorInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostUpsertWithWhereUniqueWithoutAuthorInput {
  create: PostCreateWithoutAuthorInput!
  update: PostUpdateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostWhereInput {
  AND: [PostWhereInput!]
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  author: UserWhereInput
  authorId: StringFilter
  content: JsonNullableFilter
  createdAt: DateTimeFilter
  id: StringFilter
  published: BoolFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input PostWhereUniqueInput {
  AND: [PostWhereInput!]
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  author: UserRelationFilter
  authorId: StringFilter
  content: JsonNullableFilter
  createdAt: DateTimeFilter
  id: String
  published: BoolFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

type Query {
  accountInfo: AccountInfo!
  authExchangeToken(data: AuthExchangeTokenInput!): AuthSession!
  authLogin(data: AuthLoginInput!): AuthSession!
  authPasswordResetRequest(data: AuthPasswordResetRequestInput!): String!
  findFirstPost(cursor: PostWhereUniqueInput, distinct: [PostScalarFieldEnum!], orderBy: [PostOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PostWhereInput): Post!
  findFirstUser(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: UserWhereInput): User!
  findManyPost(cursor: PostWhereUniqueInput, distinct: [PostScalarFieldEnum!], orderBy: [PostOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PostWhereInput): [Post!]!
  findManyPostCount(cursor: PostWhereUniqueInput, distinct: [PostScalarFieldEnum!], orderBy: [PostOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PostWhereInput): Float!
  findManyUser(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: UserWhereInput): [User!]!
  findManyUserCount(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: UserWhereInput): Float!
  findUniquePost(where: PostWhereUniqueInput!): Post!
  findUniqueUser(where: UserWhereUniqueInput!): User!
}

enum QueryMode {
  default
  insensitive
}

type RulesModel {
  action: [String!]
  subject: String
}

enum SortOrder {
  asc
  desc
}

input SortOrderInput {
  nulls: NullsOrder
  sort: SortOrder!
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input StringNullableListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

type User {
  Post: [Post!]
  _count: UserCount!
  avatar: FileUpload
  createdAt: DateTime!
  email: String!
  googleId: String
  googleProfile: JSON
  id: ID!
  password: String
  roles: [String!]
  rules: RulesModel
  username: String
}

type UserCount {
  Post: Int!
}

type UserCountAggregate {
  _all: Int!
  createdAt: Int!
  email: Int!
  googleId: Int!
  googleProfile: Int!
  id: Int!
  password: Int!
  roles: Int!
  username: Int!
}

input UserCreateInput {
  Post: PostCreateNestedManyWithoutAuthorInput
  avatar: FileUploadCreateNestedOneWithoutAuthorInput
  createdAt: DateTime
  email: String!
  googleId: String
  googleProfile: JSON
  id: String
  password: String
  roles: UserCreaterolesInput
  username: String
}

input UserCreateNestedOneWithoutPostInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPostInput
  create: UserCreateWithoutPostInput
}

input UserCreateOrConnectWithoutPostInput {
  create: UserCreateWithoutPostInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutPostInput {
  avatar: FileUploadCreateNestedOneWithoutAuthorInput
  createdAt: DateTime
  email: String!
  googleId: String
  googleProfile: JSON
  id: String
  password: String
  roles: UserCreaterolesInput
  username: String
}

input UserCreaterolesInput {
  set: [String!]!
}

type UserMaxAggregate {
  createdAt: DateTime
  email: String
  googleId: String
  id: String
  password: String
  username: String
}

type UserMinAggregate {
  createdAt: DateTime
  email: String
  googleId: String
  id: String
  password: String
  username: String
}

input UserNullableRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

enum UserOrderByRelevanceFieldEnum {
  email
  googleId
  id
  password
  roles
  username
}

input UserOrderByRelevanceInput {
  fields: [UserOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input UserOrderByWithRelationAndSearchRelevanceInput {
  Post: PostOrderByRelationAggregateInput
  _relevance: UserOrderByRelevanceInput
  avatar: FileUploadOrderByWithRelationAndSearchRelevanceInput
  createdAt: SortOrder
  email: SortOrder
  googleId: SortOrderInput
  googleProfile: SortOrderInput
  id: SortOrder
  password: SortOrderInput
  roles: SortOrder
  username: SortOrderInput
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

enum UserScalarFieldEnum {
  createdAt
  email
  googleId
  googleProfile
  id
  password
  roles
  username
}

input UserUpdateInput {
  Post: PostUpdateManyWithoutAuthorNestedInput
  avatar: FileUploadUpdateOneWithoutAuthorNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  googleId: NullableStringFieldUpdateOperationsInput
  googleProfile: JSON
  id: StringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  roles: UserUpdaterolesInput
  username: NullableStringFieldUpdateOperationsInput
}

input UserUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  googleId: NullableStringFieldUpdateOperationsInput
  googleProfile: JSON
  id: StringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  roles: UserUpdaterolesInput
  username: NullableStringFieldUpdateOperationsInput
}

input UserUpdateOneRequiredWithoutPostNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPostInput
  create: UserCreateWithoutPostInput
  update: UserUpdateToOneWithWhereWithoutPostInput
  upsert: UserUpsertWithoutPostInput
}

input UserUpdateToOneWithWhereWithoutPostInput {
  data: UserUpdateWithoutPostInput!
  where: UserWhereInput
}

input UserUpdateWithoutPostInput {
  avatar: FileUploadUpdateOneWithoutAuthorNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  googleId: NullableStringFieldUpdateOperationsInput
  googleProfile: JSON
  id: StringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  roles: UserUpdaterolesInput
  username: NullableStringFieldUpdateOperationsInput
}

input UserUpdaterolesInput {
  push: [String!]
  set: [String!]
}

input UserUpsertWithoutPostInput {
  create: UserCreateWithoutPostInput!
  update: UserUpdateWithoutPostInput!
  where: UserWhereInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  Post: PostListRelationFilter
  avatar: FileUploadWhereInput
  createdAt: DateTimeFilter
  email: StringFilter
  googleId: StringNullableFilter
  googleProfile: JsonNullableFilter
  id: StringFilter
  password: StringNullableFilter
  roles: StringNullableListFilter
  username: StringNullableFilter
}

input UserWhereUniqueInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  Post: PostListRelationFilter
  avatar: FileUploadNullableRelationFilter
  createdAt: DateTimeFilter
  email: String
  googleId: String
  googleProfile: JsonNullableFilter
  id: String
  password: StringNullableFilter
  roles: StringNullableListFilter
  username: String
}